{%- style -%}
  .product-recommendations {
    padding: 4rem 0;
    border-top: 0.1rem solid var(--color-secondary);
  }

  .product-recommendations__header {
    text-align: center;
    margin-bottom: 3rem;
  }

  .product-recommendations__title {
    font-size: 2.8rem;
    margin-bottom: 1rem;
  }

  .product-recommendations__grid {
    display: grid;
    gap: 2rem;
  }

  @media screen and (min-width: 990px) {
    .product-recommendations__grid {
      grid-template-columns: repeat({{ section.settings.columns_desktop }}, 1fr);
    }
  }

  @media screen and (min-width: 750px) and (max-width: 989px) {
    .product-recommendations__grid {
      grid-template-columns: repeat(3, 1fr);
    }
  }

  @media screen and (max-width: 749px) {
    .product-recommendations__grid {
      grid-template-columns: repeat(2, 1fr);
    }
    
    .product-recommendations__title {
      font-size: 2.4rem;
    }
  }

  .product-card {
    text-align: center;
  }

  .product-card__image {
    position: relative;
    margin-bottom: 1.5rem;
    overflow: hidden;
    border-radius: 0.8rem;
    aspect-ratio: {% if section.settings.image_ratio == 'square' %}1/1{% elsif section.settings.image_ratio == 'portrait' %}3/4{% elsif section.settings.image_ratio == 'landscape' %}4/3{% else %}auto{% endif %};
  }

  .product-card__image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform var(--animation-duration) ease;
  }

  .product-card:hover .product-card__image img {
    transform: scale(1.05);
  }

  .product-card__title {
    font-size: 1.6rem;
    margin-bottom: 0.8rem;
  }

  .product-card__title a {
    color: var(--color-text);
    text-decoration: none;
  }

  .product-card__title a:hover {
    color: var(--color-primary);
  }

  .product-card__price {
    font-size: 1.8rem;
    font-weight: var(--font-body-weight-bold);
    color: var(--color-primary);
  }

  .product-card__price--on-sale {
    color: var(--color-accent);
  }

  .product-card__price--compare {
    font-size: 1.4rem;
    color: var(--color-secondary);
    text-decoration: line-through;
    font-weight: normal;
    margin-left: 0.5rem;
  }

  .product-card__vendor {
    font-size: 1.4rem;
    color: var(--color-secondary);
    margin-bottom: 0.5rem;
  }

  .product-card__badge {
    position: absolute;
    top: 1rem;
    left: 1rem;
    background-color: var(--color-accent);
    color: var(--color-background);
    padding: 0.4rem 0.8rem;
    border-radius: 0.4rem;
    font-size: 1.2rem;
    font-weight: var(--font-body-weight-bold);
    text-transform: uppercase;
  }

  /* Slider styles for mobile */
  @media screen and (max-width: 749px) {
    .product-recommendations__grid--slider {
      display: flex;
      overflow-x: auto;
      scroll-snap-type: x mandatory;
      gap: 1.5rem;
      padding-bottom: 1rem;
    }

    .product-recommendations__grid--slider .product-card {
      flex: 0 0 70%;
      scroll-snap-align: start;
    }
  }
{%- endstyle -%}

<product-recommendations class="product-recommendations section" data-url="{{ routes.product_recommendations_url }}?section_id={{ section.id }}&product_id={{ product.id }}&limit={{ section.settings.products_to_show }}">
  {%- if recommendations.performed and recommendations.products_count > 0 -%}
    <div class="container">
      <div class="product-recommendations__header">
        <h2 class="product-recommendations__title">{{ section.settings.heading }}</h2>
      </div>

      <div class="product-recommendations__grid {% if section.settings.enable_mobile_slider %}product-recommendations__grid--slider{% endif %}">
        {%- for product in recommendations.products -%}
          <div class="product-card">
            <div class="product-card__image">
              <a href="{{ product.url }}">
                {%- if product.featured_media -%}
                  {{ product.featured_media | image_url: width: 400 | image_tag:
                    loading: 'lazy',
                    alt: product.featured_media.alt | escape,
                    sizes: '(min-width: 990px) 25vw, (min-width: 750px) 33vw, 50vw'
                  }}
                  
                  {%- if section.settings.show_secondary_image and product.media[1] != null -%}
                    {{ product.media[1] | image_url: width: 400 | image_tag:
                      loading: 'lazy',
                      alt: product.media[1].alt | escape,
                      class: 'product-card__image--secondary',
                      sizes: '(min-width: 990px) 25vw, (min-width: 750px) 33vw, 50vw'
                    }}
                  {%- endif -%}
                {%- else -%}
                  {{ 'product-1' | placeholder_svg_tag: 'placeholder-svg' }}
                {%- endif -%}
              </a>
              
              {%- if product.compare_at_price > product.price -%}
                <div class="product-card__badge">{{ 'products.product.on_sale' | t }}</div>
              {%- endif -%}
            </div>

            {%- if section.settings.show_vendor -%}
              <div class="product-card__vendor">{{ product.vendor }}</div>
            {%- endif -%}

            <h3 class="product-card__title">
              <a href="{{ product.url }}">{{ product.title | escape }}</a>
            </h3>

            <div class="product-card__price">
              {%- if product.price_varies -%}
                <span class="product-card__price--from">
                  {{ 'products.product.price.from_price_html' | t: price: product.price_min | money }}
                </span>
              {%- else -%}
                {%- if product.compare_at_price > product.price -%}
                  <span class="product-card__price--on-sale">{{ product.price | money }}</span>
                  <span class="product-card__price--compare">{{ product.compare_at_price | money }}</span>
                {%- else -%}
                  <span>{{ product.price | money }}</span>
                {%- endif -%}
              {%- endif -%}
            </div>
          </div>
        {%- endfor -%}
      </div>
    </div>
  {%- endif -%}
</product-recommendations>

<script>
  class ProductRecommendations extends HTMLElement {
    constructor() {
      super();
    }

    connectedCallback() {
      const handleIntersection = (entries, observer) => {
        if (!entries[0].isIntersecting) return;
        observer.unobserve(this);

        fetch(this.dataset.url)
          .then(response => response.text())
          .then(text => {
            const html = document.createElement('div');
            html.innerHTML = text;
            const recommendations = html.querySelector('product-recommendations');

            if (recommendations && recommendations.innerHTML.trim().length) {
              this.innerHTML = recommendations.innerHTML;
            }
          })
          .catch(e => {
            console.error(e);
          });
      };

      new IntersectionObserver(handleIntersection.bind(this), {rootMargin: '0px 0px 400px 0px'}).observe(this);
    }
  }

  customElements.define('product-recommendations', ProductRecommendations);
</script>

{% schema %}
{
  "name": "Product recommendations",
  "tag": "section",
  "class": "section",
  "settings": [
    {
      "type": "text",
      "id": "heading",
      "default": "You may also like",
      "label": "Heading"
    },
    {
      "type": "select",
      "id": "heading_size",
      "options": [
        {
          "value": "h2",
          "label": "Medium"
        },
        {
          "value": "h1",
          "label": "Large"
        },
        {
          "value": "h3",
          "label": "Small"
        }
      ],
      "default": "h2",
      "label": "Heading size"
    },
    {
      "type": "range",
      "id": "products_to_show",
      "min": 2,
      "max": 10,
      "step": 1,
      "default": 4,
      "label": "Maximum products to show"
    },
    {
      "type": "range",
      "id": "columns_desktop",
      "min": 1,
      "max": 6,
      "step": 1,
      "default": 4,
      "label": "Number of columns on desktop"
    },
    {
      "type": "select",
      "id": "color_scheme",
      "options": [
        {
          "value": "accent-1",
          "label": "Accent 1"
        },
        {
          "value": "accent-2",
          "label": "Accent 2"
        },
        {
          "value": "background-1",
          "label": "Background 1"
        },
        {
          "value": "background-2",
          "label": "Background 2"
        },
        {
          "value": "inverse",
          "label": "Inverse"
        }
      ],
      "default": "background-1",
      "label": "Color scheme"
    },
    {
      "type": "select",
      "id": "image_ratio",
      "options": [
        {
          "value": "natural",
          "label": "Natural"
        },
        {
          "value": "square",
          "label": "Square (1:1)"
        },
        {
          "value": "portrait",
          "label": "Portrait (3:4)"
        },
        {
          "value": "landscape",
          "label": "Landscape (4:3)"
        }
      ],
      "default": "natural",
      "label": "Image ratio"
    },
    {
      "type": "checkbox",
      "id": "show_secondary_image",
      "default": true,
      "label": "Show second product image on hover"
    },
    {
      "type": "checkbox",
      "id": "show_vendor",
      "default": false,
      "label": "Show product vendor"
    },
    {
      "type": "checkbox",
      "id": "show_rating",
      "default": false,
      "label": "Show product rating"
    },
    {
      "type": "checkbox",
      "id": "enable_desktop_slider",
      "default": false,
      "label": "Enable desktop slider"
    },
    {
      "type": "checkbox",
      "id": "enable_mobile_slider",
      "default": true,
      "label": "Enable mobile slider"
    }
  ]
}
{% endschema %}
